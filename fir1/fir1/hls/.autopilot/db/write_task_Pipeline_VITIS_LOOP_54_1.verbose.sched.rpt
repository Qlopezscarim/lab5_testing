

================================================================
== Vitis HLS Report for 'write_task_Pipeline_VITIS_LOOP_54_1'
================================================================
* Date:           Sun Feb 23 14:49:44 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        fir1
* Solution:       hls (Vitis Kernel Flow Target)
* Product family: zynquplusRFSOC
* Target device:  xczu48dr-ffvg1517-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.650 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+------+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval  |                    Pipeline                    |
    |   min   |   max   |    min    |    max   | min |  max |                      Type                      |
    +---------+---------+-----------+----------+-----+------+------------------------------------------------+
    |        2|     1004|  10.000 ns|  5.020 us|    1|  1001|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+----------+-----+------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |- VITIS_LOOP_54_1  |        0|     1002|         4|          1|          1|  0 ~ 1000|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.87>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%phi_ln58 = alloca i32 1"   --->   Operation 7 'alloca' 'phi_ln58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [fir.cpp:54]   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%sext_ln54_read = read i59 @_ssdm_op_Read.ap_auto.i59, i59 %sext_ln54"   --->   Operation 9 'read' 'sext_ln54_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_read_1 = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %p_read"   --->   Operation 10 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%sext_ln54_cast = sext i59 %sext_ln54_read"   --->   Operation 11 'sext' 'sext_ln54_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i256 %gmem, void @empty_4, i32 0, i32 0, void @empty_3, i32 64, i32 125, void @empty_2, void @empty_1, void @empty_3, i32 16, i32 16, i32 16, i32 16, void @empty_3, void @empty_3, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.42ns)   --->   "%store_ln54 = store i31 0, i31 %i" [fir.cpp:54]   --->   Operation 13 'store' 'store_ln54' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 14 [1/1] (0.42ns)   --->   "%store_ln0 = store i224 0, i224 %phi_ln58"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_1 = load i31 %i" [fir.cpp:54]   --->   Operation 16 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln54 = zext i31 %i_1" [fir.cpp:54]   --->   Operation 17 'zext' 'zext_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.01ns)   --->   "%icmp_ln54 = icmp_slt  i32 %zext_ln54, i32 %p_read_1" [fir.cpp:54]   --->   Operation 18 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.01> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %for.end.loopexit.exitStub, void %for.body.split_ifconv" [fir.cpp:54]   --->   Operation 19 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.00ns)   --->   "%add_ln54 = add i31 %i_1, i31 1" [fir.cpp:54]   --->   Operation 20 'add' 'add_ln54' <Predicate = (icmp_ln54)> <Delay = 1.00> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln54_1 = zext i31 %i_1" [fir.cpp:54]   --->   Operation 21 'zext' 'zext_ln54_1' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i31 %i_1" [fir.cpp:54]   --->   Operation 22 'trunc' 'trunc_ln54' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%output_addr = getelementptr i19 %output_r, i64 0, i64 %zext_ln54_1" [fir.cpp:58]   --->   Operation 23 'getelementptr' 'output_addr' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 24 [2/2] (1.23ns)   --->   "%output_load = load i10 %output_addr" [fir.cpp:58]   --->   Operation 24 'load' 'output_load' <Predicate = (icmp_ln54)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 19> <Depth = 1000> <RAM>
ST_1 : Operation 25 [1/1] (0.67ns)   --->   "%icmp_ln58_1 = icmp_eq  i3 %trunc_ln54, i3 7" [fir.cpp:58]   --->   Operation 25 'icmp' 'icmp_ln58_1' <Predicate = (icmp_ln54)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln58 = br i1 %icmp_ln58_1, void %for.inc._crit_edge, void" [fir.cpp:58]   --->   Operation 26 'br' 'br_ln58' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln54 = store i31 %add_ln54, i31 %i" [fir.cpp:54]   --->   Operation 27 'store' 'store_ln54' <Predicate = (icmp_ln54)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 2.96>
ST_2 : Operation 28 [1/2] ( I:1.23ns O:1.23ns )   --->   "%output_load = load i10 %output_addr" [fir.cpp:58]   --->   Operation 28 'load' 'output_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 19> <Depth = 1000> <RAM>
ST_2 : Operation 29 [1/1] (0.88ns)   --->   "%icmp_ln58 = icmp_eq  i19 %output_load, i19 0" [fir.cpp:58]   --->   Operation 29 'icmp' 'icmp_ln58' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i19.i32, i19 %output_load, i32 18" [fir.cpp:58]   --->   Operation 30 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.88ns)   --->   "%sub_ln58 = sub i19 0, i19 %output_load" [fir.cpp:58]   --->   Operation 31 'sub' 'sub_ln58' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.36ns)   --->   "%select_ln58 = select i1 %tmp, i19 %sub_ln58, i19 %output_load" [fir.cpp:58]   --->   Operation 32 'select' 'select_ln58' <Predicate = true> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.48ns)   --->   "%tmp_1 = ctlz i19 @llvm.ctlz.i19, i19 %select_ln58, i1 0" [fir.cpp:58]   --->   Operation 33 'ctlz' 'tmp_1' <Predicate = true> <Delay = 0.48> <CoreInst = "ctlz">   --->   Core 145 'ctlz' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'ctlz'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln58 = trunc i19 %tmp_1" [fir.cpp:58]   --->   Operation 34 'trunc' 'trunc_ln58' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.21>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i19 %select_ln58" [fir.cpp:58]   --->   Operation 35 'zext' 'zext_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.78ns)   --->   "%add_ln58 = add i5 %trunc_ln58, i5 6" [fir.cpp:58]   --->   Operation 36 'add' 'add_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i5 %add_ln58" [fir.cpp:58]   --->   Operation 37 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.20ns)   --->   "%shl_ln58 = shl i43 %zext_ln58, i43 %zext_ln58_1" [fir.cpp:58]   --->   Operation 38 'shl' 'shl_ln58' <Predicate = (!icmp_ln58)> <Delay = 1.20> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i42 @_ssdm_op_PartSelect.i42.i43.i32.i32, i43 %shl_ln58, i32 1, i32 42" [fir.cpp:58]   --->   Operation 39 'partselect' 'lshr_ln' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln58_2 = zext i42 %lshr_ln" [fir.cpp:58]   --->   Operation 40 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i43.i32, i43 %shl_ln58, i32 25" [fir.cpp:58]   --->   Operation 41 'bitselect' 'tmp_4' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%select_ln58_1 = select i1 %tmp_4, i8 127, i8 126" [fir.cpp:58]   --->   Operation 42 'select' 'select_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.78ns)   --->   "%sub_ln58_1 = sub i5 3, i5 %trunc_ln58" [fir.cpp:58]   --->   Operation 43 'sub' 'sub_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node add_ln58_1)   --->   "%sext_ln58 = sext i5 %sub_ln58_1" [fir.cpp:58]   --->   Operation 44 'sext' 'sext_ln58' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.76ns) (out node of the LUT)   --->   "%add_ln58_1 = add i8 %select_ln58_1, i8 %sext_ln58" [fir.cpp:58]   --->   Operation 45 'add' 'add_ln58_1' <Predicate = (!icmp_ln58)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 %tmp, i8 %add_ln58_1" [fir.cpp:58]   --->   Operation 46 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%pi_assign = partset i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32, i64 %zext_ln58_2, i9 %tmp_2, i32 23, i32 31" [fir.cpp:58]   --->   Operation 47 'partset' 'pi_assign' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%LD = trunc i64 %pi_assign" [fir.cpp:58]   --->   Operation 48 'trunc' 'LD' <Predicate = (!icmp_ln58)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.44ns)   --->   "%empty = select i1 %icmp_ln58, i32 0, i32 %LD" [fir.cpp:58]   --->   Operation 49 'select' 'empty' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 64 'ret' 'ret_ln0' <Predicate = (!icmp_ln54)> <Delay = 0.42>

State 4 <SV = 3> <Delay = 3.65>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%phi_ln58_load_1 = load i224 %phi_ln58" [fir.cpp:58]   --->   Operation 50 'load' 'phi_ln58_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i256 %gmem, i64 %sext_ln54_cast" [fir.cpp:54]   --->   Operation 51 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%specpipeline_ln54 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_3" [fir.cpp:54]   --->   Operation 52 'specpipeline' 'specpipeline_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%speclooptripcount_ln56 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 1000, i64 500" [fir.cpp:56]   --->   Operation 53 'speclooptripcount' 'speclooptripcount_ln56' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [fir.cpp:54]   --->   Operation 54 'specloopname' 'specloopname_ln54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i256 @_ssdm_op_BitConcatenate.i256.i32.i224, i32 %empty, i224 %phi_ln58_load_1" [fir.cpp:58]   --->   Operation 55 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (3.65ns)   --->   "%write_ln58 = write void @_ssdm_op_Write.m_axi.p1i256, i256 %gmem_addr, i256 %or_ln, i32 4294967295" [fir.cpp:58]   --->   Operation 56 'write' 'write_ln58' <Predicate = (icmp_ln58_1)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%br_ln58 = br void %for.inc._crit_edge" [fir.cpp:58]   --->   Operation 57 'br' 'br_ln58' <Predicate = (icmp_ln58_1)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%phi_ln58_load = load i224 %phi_ln58" [fir.cpp:54]   --->   Operation 58 'load' 'phi_ln58_load' <Predicate = (!icmp_ln58_1)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i192 @_ssdm_op_PartSelect.i192.i224.i32.i32, i224 %phi_ln58_load, i32 32, i32 223" [fir.cpp:54]   --->   Operation 59 'partselect' 'tmp_3' <Predicate = (!icmp_ln58_1)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i224 @_ssdm_op_BitConcatenate.i224.i32.i192, i32 %empty, i192 %tmp_3" [fir.cpp:54]   --->   Operation 60 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln58_1)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.56ns)   --->   "%select_ln58_2 = select i1 %icmp_ln58_1, i224 0, i224 %tmp_5" [fir.cpp:58]   --->   Operation 61 'select' 'select_ln58_2' <Predicate = true> <Delay = 0.56> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.42ns)   --->   "%store_ln58 = store i224 %select_ln58_2, i224 %phi_ln58" [fir.cpp:58]   --->   Operation 62 'store' 'store_ln58' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln54 = br void %for.body" [fir.cpp:54]   --->   Operation 63 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 1.870ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln54', fir.cpp:54) of constant 0 on local variable 'i', fir.cpp:54 [11]  (0.427 ns)
	'load' operation 31 bit ('i', fir.cpp:54) on local variable 'i', fir.cpp:54 [15]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln54', fir.cpp:54) [17]  (1.016 ns)
	'store' operation 0 bit ('store_ln54', fir.cpp:54) of variable 'add_ln54', fir.cpp:54 on local variable 'i', fir.cpp:54 [62]  (0.427 ns)

 <State 2>: 2.963ns
The critical path consists of the following:
	'load' operation 19 bit ('output_load', fir.cpp:58) on array 'output_r' [29]  (1.237 ns)
	'sub' operation 19 bit ('sub_ln58', fir.cpp:58) [32]  (0.884 ns)
	'select' operation 19 bit ('select_ln58', fir.cpp:58) [33]  (0.361 ns)
	'ctlz' operation 19 bit ('tmp_1', fir.cpp:58) [34]  (0.481 ns)

 <State 3>: 3.212ns
The critical path consists of the following:
	'add' operation 5 bit ('add_ln58', fir.cpp:58) [37]  (0.789 ns)
	'shl' operation 43 bit ('shl_ln58', fir.cpp:58) [39]  (1.208 ns)
	'select' operation 8 bit ('select_ln58_1', fir.cpp:58) [43]  (0.000 ns)
	'add' operation 8 bit ('add_ln58_1', fir.cpp:58) [46]  (0.765 ns)
	'select' operation 32 bit ('empty', fir.cpp:58) [50]  (0.449 ns)

 <State 4>: 3.650ns
The critical path consists of the following:
	'load' operation 224 bit ('phi_ln58_load_1', fir.cpp:58) on local variable 'phi_ln58' [20]  (0.000 ns)
	bus write operation ('write_ln58', fir.cpp:58) on port 'gmem' (fir.cpp:58) [55]  (3.650 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
