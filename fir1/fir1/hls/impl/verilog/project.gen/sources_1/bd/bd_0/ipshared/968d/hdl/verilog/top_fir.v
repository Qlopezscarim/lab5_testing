// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_fir (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        p_read,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] in_r_address0;
output   in_r_ce0;
input  [16:0] in_r_q0;
output  [9:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [18:0] out_r_d0;
input  [31:0] p_read;
output  [31:0] ap_return;

reg ap_idle;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln12_fu_229_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
reg    ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg;
reg    ap_loop_exit_ready_delayed;
reg   [31:0] p_read_3_reg_728;
reg   [31:0] p_read_3_reg_728_pp0_iter1_reg;
reg   [31:0] p_read_3_reg_728_pp0_iter2_reg;
reg   [0:0] icmp_ln12_reg_732;
reg   [0:0] icmp_ln12_reg_732_pp0_iter1_reg;
reg   [0:0] icmp_ln12_reg_732_pp0_iter2_reg;
wire   [63:0] zext_ln12_fu_241_p1;
reg   [63:0] zext_ln12_reg_736;
reg   [63:0] zext_ln12_reg_736_pp0_iter1_reg;
reg   [63:0] zext_ln12_reg_736_pp0_iter2_reg;
reg   [63:0] zext_ln12_reg_736_pp0_iter3_reg;
reg  signed [16:0] reg_11_reg_746;
reg   [17:0] trunc_ln_reg_752;
wire  signed [31:0] mul_ln29_1_fu_305_p2;
reg  signed [31:0] mul_ln29_1_reg_757;
wire  signed [30:0] mul_ln29_2_fu_315_p2;
reg  signed [30:0] mul_ln29_2_reg_762;
reg  signed [16:0] reg_12_reg_767;
reg   [18:0] tmp_8_reg_772;
wire  signed [31:0] mul_ln29_4_fu_445_p2;
reg  signed [31:0] mul_ln29_4_reg_777;
wire  signed [31:0] mul_ln29_5_fu_455_p2;
reg  signed [31:0] mul_ln29_5_reg_782;
reg   [18:0] tmp_1_reg_787;
wire  signed [29:0] mul_ln29_7_fu_574_p2;
reg  signed [29:0] mul_ln29_7_reg_792;
wire  signed [29:0] mul_ln29_8_fu_584_p2;
reg  signed [29:0] mul_ln29_8_reg_797;
reg    ap_condition_exit_pp0_iter3_stage0;
wire    ap_block_pp0_stage0;
reg   [30:0] n_fu_100;
wire   [30:0] add_ln12_fu_235_p2;
wire    ap_loop_init;
reg   [30:0] ap_sig_allocacmp_n_1;
reg   [16:0] reg_fu_104;
reg   [16:0] reg_2_fu_108;
reg   [16:0] reg_4_fu_112;
reg   [16:0] reg_6_fu_116;
reg   [16:0] reg_8_fu_120;
reg   [16:0] reg_1_fu_124;
reg   [16:0] reg_3_fu_128;
reg   [16:0] reg_5_fu_132;
reg   [16:0] reg_7_fu_136;
reg    in_r_ce0_local;
reg    out_r_we0_local;
reg    out_r_ce0_local;
wire   [31:0] zext_ln12_1_fu_225_p1;
wire  signed [16:0] sext_ln29_fu_263_p0;
wire  signed [14:0] mul_ln29_fu_267_p1;
wire   [30:0] shl_ln_fu_273_p3;
wire   [31:0] mul_ln29_fu_267_p2;
wire  signed [31:0] sext_ln29_1_fu_281_p1;
wire   [31:0] add_ln29_fu_285_p2;
wire  signed [16:0] sext_ln29_2_fu_301_p0;
wire   [14:0] mul_ln29_1_fu_305_p1;
wire  signed [16:0] sext_ln29_4_fu_311_p0;
wire  signed [13:0] mul_ln29_2_fu_315_p1;
wire   [31:0] tmp_fu_347_p3;
wire  signed [32:0] sext_ln29_18_fu_354_p1;
wire  signed [32:0] sext_ln29_3_fu_358_p1;
wire   [32:0] add_ln29_1_fu_361_p2;
wire   [18:0] tmp_6_fu_367_p4;
wire   [32:0] and_ln_fu_377_p3;
wire  signed [32:0] sext_ln29_5_fu_385_p1;
wire   [32:0] add_ln29_2_fu_388_p2;
wire   [18:0] tmp_7_fu_394_p4;
wire   [11:0] mul_ln29_3_fu_415_p1;
wire  signed [28:0] mul_ln29_3_fu_415_p2;
wire   [32:0] and_ln29_1_fu_404_p3;
wire  signed [32:0] sext_ln29_7_fu_421_p1;
wire   [32:0] add_ln29_3_fu_425_p2;
wire  signed [16:0] sext_ln29_8_fu_441_p0;
wire   [14:0] mul_ln29_4_fu_445_p1;
wire  signed [16:0] sext_ln29_10_fu_451_p0;
wire  signed [14:0] mul_ln29_5_fu_455_p1;
wire   [32:0] and_ln29_2_fu_479_p3;
wire  signed [32:0] sext_ln29_9_fu_486_p1;
wire   [32:0] add_ln29_4_fu_489_p2;
wire   [18:0] tmp_9_fu_495_p4;
wire   [32:0] and_ln29_3_fu_505_p3;
wire  signed [32:0] sext_ln29_11_fu_513_p1;
wire   [32:0] add_ln29_5_fu_516_p2;
wire   [18:0] tmp_s_fu_522_p4;
wire  signed [16:0] sext_ln29_12_fu_540_p0;
wire   [13:0] mul_ln29_6_fu_544_p1;
wire  signed [30:0] mul_ln29_6_fu_544_p2;
wire   [32:0] and_ln29_4_fu_532_p3;
wire  signed [32:0] sext_ln29_13_fu_550_p1;
wire   [32:0] add_ln29_6_fu_554_p2;
wire  signed [16:0] sext_ln29_14_fu_570_p0;
wire   [12:0] mul_ln29_7_fu_574_p1;
wire  signed [16:0] sext_ln29_16_fu_580_p0;
wire  signed [12:0] mul_ln29_8_fu_584_p1;
wire   [32:0] and_ln29_5_fu_604_p3;
wire  signed [32:0] sext_ln29_15_fu_611_p1;
wire   [32:0] add_ln29_7_fu_614_p2;
wire   [18:0] tmp_2_fu_620_p4;
wire   [32:0] and_ln29_6_fu_630_p3;
wire  signed [32:0] sext_ln29_17_fu_638_p1;
wire   [32:0] add_ln29_8_fu_641_p2;
reg   [31:0] ap_return_preg;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_105;
reg    ap_condition_165;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 n_fu_100 = 31'd0;
#0 reg_fu_104 = 17'd0;
#0 reg_2_fu_108 = 17'd0;
#0 reg_4_fu_112 = 17'd0;
#0 reg_6_fu_116 = 17'd0;
#0 reg_8_fu_120 = 17'd0;
#0 reg_1_fu_124 = 17'd0;
#0 reg_3_fu_128 = 17'd0;
#0 reg_5_fu_132 = 17'd0;
#0 reg_7_fu_136 = 17'd0;
#0 ap_return_preg = 32'd0;
end

top_mul_17s_15s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15s_32_1_1_U11(
    .din0(sext_ln29_fu_263_p0),
    .din1(mul_ln29_fu_267_p1),
    .dout(mul_ln29_fu_267_p2)
);

top_mul_17s_15ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15ns_32_1_1_U12(
    .din0(sext_ln29_2_fu_301_p0),
    .din1(mul_ln29_1_fu_305_p1),
    .dout(mul_ln29_1_fu_305_p2)
);

top_mul_17s_14s_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 31 ))
mul_17s_14s_31_1_1_U13(
    .din0(sext_ln29_4_fu_311_p0),
    .din1(mul_ln29_2_fu_315_p1),
    .dout(mul_ln29_2_fu_315_p2)
);

top_mul_17s_12ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 29 ))
mul_17s_12ns_29_1_1_U14(
    .din0(reg_11_reg_746),
    .din1(mul_ln29_3_fu_415_p1),
    .dout(mul_ln29_3_fu_415_p2)
);

top_mul_17s_15ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15ns_32_1_1_U15(
    .din0(sext_ln29_8_fu_441_p0),
    .din1(mul_ln29_4_fu_445_p1),
    .dout(mul_ln29_4_fu_445_p2)
);

top_mul_17s_15s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 32 ))
mul_17s_15s_32_1_1_U16(
    .din0(sext_ln29_10_fu_451_p0),
    .din1(mul_ln29_5_fu_455_p1),
    .dout(mul_ln29_5_fu_455_p2)
);

top_mul_17s_14ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 31 ))
mul_17s_14ns_31_1_1_U17(
    .din0(sext_ln29_12_fu_540_p0),
    .din1(mul_ln29_6_fu_544_p1),
    .dout(mul_ln29_6_fu_544_p2)
);

top_mul_17s_13ns_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
mul_17s_13ns_30_1_1_U18(
    .din0(sext_ln29_14_fu_570_p0),
    .din1(mul_ln29_7_fu_574_p1),
    .dout(mul_ln29_7_fu_574_p2)
);

top_mul_17s_13s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 30 ))
mul_17s_13s_30_1_1_U19(
    .din0(sext_ln29_16_fu_580_p0),
    .din1(mul_ln29_8_fu_584_p1),
    .dout(mul_ln29_8_fu_584_p2)
);

top_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_return_preg <= p_read_3_reg_728_pp0_iter2_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_105)) begin
        if ((icmp_ln12_fu_229_p2 == 1'd1)) begin
            n_fu_100 <= add_ln12_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_100 <= 31'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1))) begin
            reg_1_fu_124 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln12_reg_732 == 1'd1))) begin
            reg_1_fu_124 <= reg_fu_104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1))) begin
            reg_2_fu_108 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln12_reg_732 == 1'd1))) begin
            reg_2_fu_108 <= reg_1_fu_124;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1))) begin
            reg_3_fu_128 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln12_reg_732 == 1'd1))) begin
            reg_3_fu_128 <= reg_2_fu_108;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_165)) begin
            reg_4_fu_112 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln12_reg_732_pp0_iter1_reg == 1'd1))) begin
            reg_4_fu_112 <= reg_11_reg_746;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_165)) begin
            reg_5_fu_132 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln12_reg_732_pp0_iter1_reg == 1'd1))) begin
            reg_5_fu_132 <= reg_4_fu_112;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_165)) begin
            reg_6_fu_116 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln12_reg_732_pp0_iter2_reg == 1'd1))) begin
            reg_6_fu_116 <= reg_12_reg_767;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_165)) begin
            reg_7_fu_136 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln12_reg_732_pp0_iter2_reg == 1'd1))) begin
            reg_7_fu_136 <= reg_6_fu_116;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_165)) begin
            reg_8_fu_120 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln12_reg_732_pp0_iter2_reg == 1'd1))) begin
            reg_8_fu_120 <= reg_7_fu_136;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1))) begin
            reg_fu_104 <= 17'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln12_reg_732 == 1'd1))) begin
            reg_fu_104 <= in_r_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage0;
        ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln12_reg_732 <= icmp_ln12_fu_229_p2;
        icmp_ln12_reg_732_pp0_iter1_reg <= icmp_ln12_reg_732;
        mul_ln29_1_reg_757 <= mul_ln29_1_fu_305_p2;
        mul_ln29_2_reg_762 <= mul_ln29_2_fu_315_p2;
        p_read_3_reg_728_pp0_iter1_reg <= p_read_3_reg_728;
        reg_11_reg_746 <= reg_3_fu_128;
        trunc_ln_reg_752 <= {{add_ln29_fu_285_p2[31:14]}};
        zext_ln12_reg_736[30 : 0] <= zext_ln12_fu_241_p1[30 : 0];
        zext_ln12_reg_736_pp0_iter1_reg[30 : 0] <= zext_ln12_reg_736[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg <= ap_condition_exit_pp0_iter0_stage0_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln12_reg_732_pp0_iter2_reg <= icmp_ln12_reg_732_pp0_iter1_reg;
        mul_ln29_4_reg_777 <= mul_ln29_4_fu_445_p2;
        mul_ln29_5_reg_782 <= mul_ln29_5_fu_455_p2;
        mul_ln29_7_reg_792 <= mul_ln29_7_fu_574_p2;
        mul_ln29_8_reg_797 <= mul_ln29_8_fu_584_p2;
        p_read_3_reg_728_pp0_iter2_reg <= p_read_3_reg_728_pp0_iter1_reg;
        reg_12_reg_767 <= reg_5_fu_132;
        tmp_1_reg_787 <= {{add_ln29_6_fu_554_p2[32:14]}};
        tmp_8_reg_772 <= {{add_ln29_3_fu_425_p2[32:14]}};
        zext_ln12_reg_736_pp0_iter2_reg[30 : 0] <= zext_ln12_reg_736_pp0_iter1_reg[30 : 0];
        zext_ln12_reg_736_pp0_iter3_reg[30 : 0] <= zext_ln12_reg_736_pp0_iter2_reg[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_read_3_reg_728 <= p_read;
    end
end

always @ (*) begin
    if (((icmp_ln12_fu_229_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln12_reg_732_pp0_iter2_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage0_pp0_iter3_reg))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_return = p_read_3_reg_728_pp0_iter2_reg;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n_1 = 31'd0;
    end else begin
        ap_sig_allocacmp_n_1 = n_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_ce0_local = 1'b1;
    end else begin
        in_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_r_ce0_local = 1'b1;
    end else begin
        out_r_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_r_we0_local = 1'b1;
    end else begin
        out_r_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_235_p2 = (ap_sig_allocacmp_n_1 + 31'd1);

assign add_ln29_1_fu_361_p2 = ($signed(sext_ln29_18_fu_354_p1) + $signed(sext_ln29_3_fu_358_p1));

assign add_ln29_2_fu_388_p2 = ($signed(and_ln_fu_377_p3) + $signed(sext_ln29_5_fu_385_p1));

assign add_ln29_3_fu_425_p2 = ($signed(and_ln29_1_fu_404_p3) + $signed(sext_ln29_7_fu_421_p1));

assign add_ln29_4_fu_489_p2 = ($signed(and_ln29_2_fu_479_p3) + $signed(sext_ln29_9_fu_486_p1));

assign add_ln29_5_fu_516_p2 = ($signed(and_ln29_3_fu_505_p3) + $signed(sext_ln29_11_fu_513_p1));

assign add_ln29_6_fu_554_p2 = ($signed(and_ln29_4_fu_532_p3) + $signed(sext_ln29_13_fu_550_p1));

assign add_ln29_7_fu_614_p2 = ($signed(and_ln29_5_fu_604_p3) + $signed(sext_ln29_15_fu_611_p1));

assign add_ln29_8_fu_641_p2 = ($signed(and_ln29_6_fu_630_p3) + $signed(sext_ln29_17_fu_638_p1));

assign add_ln29_fu_285_p2 = ($signed(mul_ln29_fu_267_p2) + $signed(sext_ln29_1_fu_281_p1));

assign and_ln29_1_fu_404_p3 = {{tmp_7_fu_394_p4}, {14'd0}};

assign and_ln29_2_fu_479_p3 = {{tmp_8_reg_772}, {14'd0}};

assign and_ln29_3_fu_505_p3 = {{tmp_9_fu_495_p4}, {14'd0}};

assign and_ln29_4_fu_532_p3 = {{tmp_s_fu_522_p4}, {14'd0}};

assign and_ln29_5_fu_604_p3 = {{tmp_1_reg_787}, {14'd0}};

assign and_ln29_6_fu_630_p3 = {{tmp_2_fu_620_p4}, {14'd0}};

assign and_ln_fu_377_p3 = {{tmp_6_fu_367_p4}, {14'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_condition_105 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_165 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln12_fu_229_p2 = (($signed(zext_ln12_1_fu_225_p1) < $signed(p_read)) ? 1'b1 : 1'b0);

assign in_r_address0 = zext_ln12_fu_241_p1;

assign in_r_ce0 = in_r_ce0_local;

assign mul_ln29_1_fu_305_p1 = 32'd9830;

assign mul_ln29_2_fu_315_p1 = 31'd2147477094;

assign mul_ln29_3_fu_415_p1 = 29'd1638;

assign mul_ln29_4_fu_445_p1 = 32'd9830;

assign mul_ln29_5_fu_455_p1 = 32'd4294957465;

assign mul_ln29_6_fu_544_p1 = 31'd6553;

assign mul_ln29_7_fu_574_p1 = 30'd3276;

assign mul_ln29_8_fu_584_p1 = 30'd1073738547;

assign mul_ln29_fu_267_p1 = 32'd4294954188;

assign out_r_address0 = zext_ln12_reg_736_pp0_iter3_reg;

assign out_r_ce0 = out_r_ce0_local;

assign out_r_d0 = {{add_ln29_8_fu_641_p2[32:14]}};

assign out_r_we0 = out_r_we0_local;

assign sext_ln29_10_fu_451_p0 = reg_5_fu_132;

assign sext_ln29_11_fu_513_p1 = mul_ln29_5_reg_782;

assign sext_ln29_12_fu_540_p0 = reg_6_fu_116;

assign sext_ln29_13_fu_550_p1 = mul_ln29_6_fu_544_p2;

assign sext_ln29_14_fu_570_p0 = reg_7_fu_136;

assign sext_ln29_15_fu_611_p1 = mul_ln29_7_reg_792;

assign sext_ln29_16_fu_580_p0 = reg_8_fu_120;

assign sext_ln29_17_fu_638_p1 = mul_ln29_8_reg_797;

assign sext_ln29_18_fu_354_p1 = $signed(tmp_fu_347_p3);

assign sext_ln29_1_fu_281_p1 = $signed(shl_ln_fu_273_p3);

assign sext_ln29_2_fu_301_p0 = reg_1_fu_124;

assign sext_ln29_3_fu_358_p1 = mul_ln29_1_reg_757;

assign sext_ln29_4_fu_311_p0 = reg_2_fu_108;

assign sext_ln29_5_fu_385_p1 = mul_ln29_2_reg_762;

assign sext_ln29_7_fu_421_p1 = mul_ln29_3_fu_415_p2;

assign sext_ln29_8_fu_441_p0 = reg_4_fu_112;

assign sext_ln29_9_fu_486_p1 = mul_ln29_4_reg_777;

assign sext_ln29_fu_263_p0 = reg_fu_104;

assign shl_ln_fu_273_p3 = {{in_r_q0}, {14'd0}};

assign tmp_2_fu_620_p4 = {{add_ln29_7_fu_614_p2[32:14]}};

assign tmp_6_fu_367_p4 = {{add_ln29_1_fu_361_p2[32:14]}};

assign tmp_7_fu_394_p4 = {{add_ln29_2_fu_388_p2[32:14]}};

assign tmp_9_fu_495_p4 = {{add_ln29_4_fu_489_p2[32:14]}};

assign tmp_fu_347_p3 = {{trunc_ln_reg_752}, {14'd0}};

assign tmp_s_fu_522_p4 = {{add_ln29_5_fu_516_p2[32:14]}};

assign zext_ln12_1_fu_225_p1 = ap_sig_allocacmp_n_1;

assign zext_ln12_fu_241_p1 = ap_sig_allocacmp_n_1;

always @ (posedge ap_clk) begin
    zext_ln12_reg_736[63:31] <= 33'b000000000000000000000000000000000;
    zext_ln12_reg_736_pp0_iter1_reg[63:31] <= 33'b000000000000000000000000000000000;
    zext_ln12_reg_736_pp0_iter2_reg[63:31] <= 33'b000000000000000000000000000000000;
    zext_ln12_reg_736_pp0_iter3_reg[63:31] <= 33'b000000000000000000000000000000000;
end

endmodule //top_fir
